/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q        &kp W        &kp E       &kp R       &kp T        &kp Y          &kp U       &kp I       &kp O        &kp P                    &trans
&trans  &mt LCTRL A  &mt LSHFT S  &mt LALT D  &mt LCMD F  &kp G        &kp H          &mt RCMD J  &mt RALT K  &mt RSHFT L  &mt RCTRL RIGHT_BRACKET  &trans
&trans  &kp Z        &kp X        &kp C       &kp V       &kp B        &kp N          &kp M       &kp COMMA   &kp DOT      &kp FSLH                 &trans
                                  &lt 1 TAB   &lt 2 ESC   &kp ENTER    &kp BACKSPACE  &kp SPACE   &to 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none   &kp N1            &kp N2     &kp N3     &kp N4            &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &kp LS(NUMBER_0)  &kp SLASH  &kp MINUS  &kp LS(NUMBER_7)  &kp LS(BSLH)    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans            &trans     &trans     &trans            &trans          &trans    &trans    &trans  &trans     &trans  &trans
                                     &trans     &to 0             &trans          &trans    &trans    &to 2
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp HASH  &kp DLLR  &kp PRCNT    &kp GRAVE             &kp LS(GRAVE)     &kp LS(NUMBER_8)      &kp LS(NUMBER_9)      &kp RA(NUMBER_4)  &trans
&trans  &kp LS(MINUS)     &trans            &trans    &trans    &trans       &kp RA(NUMBER_7)      &kp EQUAL         &kp RA(NUMBER_8)      &kp RA(NUMBER_9)      &trans            &trans
&trans  &trans            &trans            &trans    &trans    &trans       &kp RA(LS(NUMBER_7))  &kp RS(NUMBER_7)  &kp RA(LS(NUMBER_8))  &kp RA(LS(NUMBER_9))  &trans            &trans
                                            &trans    &to 0     &trans       &trans                &trans            &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
